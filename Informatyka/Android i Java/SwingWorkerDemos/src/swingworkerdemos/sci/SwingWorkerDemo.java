/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package swingworkerdemos.sci;

import java.awt.Cursor;
import java.awt.Toolkit;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.util.List;
import java.util.Random;
import javax.swing.SwingWorker;

/**
 *
 * @author Luk
 */
public class SwingWorkerDemo extends javax.swing.JFrame {

    /**
     * Creates new form ProgressBarDemo
     */
    public SwingWorkerDemo() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jProgressBar = new javax.swing.JProgressBar();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea = new javax.swing.JTextArea();
        przerwijButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("ProgressBar Demo");

        jButton1.setText("Czasochłonna operacja");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Czasochłonna operacja w tle");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jTextArea.setEditable(false);
        jTextArea.setColumns(20);
        jTextArea.setRows(5);
        jScrollPane1.setViewportView(jTextArea);

        przerwijButton.setText("Przerwij operację w tle");
        przerwijButton.setEnabled(false);
        przerwijButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                przerwijButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jProgressBar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(przerwijButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jProgressBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 282, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(przerwijButton)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void inicjujOperacje() {
        jButton1.setEnabled(false);
        jButton2.setEnabled(false);
        przerwijButton.setEnabled(true);
        setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
        jTextArea.setText("Rozpoczęcie operacji.\n");
        jProgressBar.setValue(0);
    }

    private void konczOperacje() {
        Toolkit.getDefaultToolkit().beep();
        jButton1.setEnabled(true);
        jButton2.setEnabled(true);
        przerwijButton.setEnabled(false);
        setCursor(null);
        jTextArea.append("Operacja zakończona!\n");
    }

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        inicjujOperacje();

        Random random = new Random();
        int postep = 0;
        while (postep < 100) {
            try {
                // Sleep for up to one second.
                Thread.sleep(random.nextInt(1000));
            } catch (InterruptedException ex) {
            }
            // Make random progress.
            postep += random.nextInt(10);
            postep = Math.min(postep, 100);
            jProgressBar.setValue(postep);
            jTextArea.append(String.format("Ukończono %d%% operacji.\n", postep));
        }

        konczOperacje();
    }//GEN-LAST:event_jButton1ActionPerformed

    Operacja operacja;

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        inicjujOperacje();

        //operacja w tle
        operacja = new Operacja();
        operacja.addPropertyChangeListener(new PropertyChangeListener() {

            @Override
            public void propertyChange(PropertyChangeEvent pce) {
                if ("progress".equals(pce.getPropertyName())) {
                    int p = (int) pce.getNewValue();
                    jProgressBar.setValue(p);
                }
            }
        });

        operacja.execute();

        //konczOperacje();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void przerwijButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_przerwijButtonActionPerformed
        operacja.cancel(true);
    }//GEN-LAST:event_przerwijButtonActionPerformed

    class Operacja extends SwingWorker<Void, String> {

        @Override
        protected Void doInBackground() throws Exception {
//            Random random = new Random();
//            int postep = 0;
//            while (postep < 100 && !isCancelled()) {
//                
//                try {
//                    // Sleep for up to one second.
//                    Thread.sleep(random.nextInt(1000));
//                } catch (InterruptedException ex) {
//                }
//                // Make random progress.
//                postep += random.nextInt(10);
//                postep = Math.min(postep, 100);
//
//                setProgress(postep);
//                jProgressBar.setValue(postep);
//
//                publish(String.format("Ukończono %d%% operacji.\n", postep));
//                jTextArea.append(String.format("Ukończono %d%% operacji.\n", postep));
//            }

                
                String s = "";
                File f1 = new File("sample.txt");
                FileReader fr = new FileReader(f1);
                BufferedReader br = new BufferedReader(fr);
                
                long totalLength = f1.length();
                double lengthPerPercent = 100.0 / totalLength;
                long readLength = 0;
                System.out.println(totalLength);
        
                while ((s = br.readLine()) != null) {
                    readLength += s.length();
                    try {
                        Thread.sleep(200);
                    } catch (Exception e) {
                    }
                    System.out.println("-->" + s);
                    
                    jProgressBar.setValue((int)Math.round(lengthPerPercent * readLength));
                    publish(String.format("Ukończono %d%% operacji.\n", Math.round(lengthPerPercent * readLength)));
                    jTextArea.append(String.format("Ukończono %d%% operacji.\n", Math.round(lengthPerPercent * readLength)));
                }
            return null;
        }

        @Override
        protected void process(List<String> list) {
            if (!isCancelled()) {
                String napis = list.get(list.size() - 1);
                jTextArea.append(napis);
            }
        }

        @Override
        protected void done() {
            konczOperacje();
        }

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SwingWorkerDemo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SwingWorkerDemo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SwingWorkerDemo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SwingWorkerDemo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SwingWorkerDemo().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JProgressBar jProgressBar;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea;
    private javax.swing.JButton przerwijButton;
    // End of variables declaration//GEN-END:variables
}
